@model zakjr.Models.BlogPost
@using zakjr.Models

@{
    Layout = "_AdminLayout";
    ViewData["Title"] = "Blog Admin - Edit Post";
}
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <div class="row">
        <div class="small-12 column"><h4>Editing Blog Post</h4></div>
        @Html.ValidationSummary(true)
        @Html.HiddenFor(model => model.ID)
    </div>
    <div class="row">
        <div class="small-12 medium-6 large-4 column">
            @Html.LabelFor(model => model.Title)
            @Html.EditorFor(model => model.Title)
            @Html.ValidationMessageFor(model => model.Title)
        </div>
        <div class="small-12 medium-6 large-4 column">
            @Html.LabelFor(model => model.Subtitle)
            @Html.EditorFor(model => model.Subtitle)
            @Html.ValidationMessageFor(model => model.Subtitle)
        </div>
        <div class="small-12 medium-6 large-4 column">
            @Html.LabelFor(model => model.FeaturedImage)
            @Html.EditorFor(model => model.FeaturedImage)
            @Html.ValidationMessageFor(model => model.FeaturedImage)
        </div>
    </div>
    <div class="row">
        <img src="@Model.FeaturedImage" />
    </div>

    @if (Model.TextContentList != null)
    {
        for (int i = 0; i < Model.TextContentList.Count; ++i)
        {
            <div id="ContentList_@(Model.TextContentList[i].ID)__Dragger" class="dragger-row row callout" draggable="true">
                <div class="dragger-handle column small-1 callout secondary text-center">
                    <i class="fa fa-arrows-v" aria-hidden="true"></i>
                </div>
                <div class="dragger-content column small-11">
                    @Html.HiddenFor(model => model.TextContentList[i].Sequence)
                    @Html.EditorFor(model => model.TextContentList[i].Content)
                </div>
            </div>
        }
        for (int i = 0; i < Model.ImageContentList.Count; ++i)
        {
            <div id="ContentList_@(Model.ImageContentList[i].ID)__Dragger" class="dragger-row row callout" draggable="true">
                <div class="dragger-handle column small-1 callout secondary text-center">
                    <i class="fa fa-arrows-v" aria-hidden="true"></i>
                </div>
                <div class="dragger-content column small-11">
                    @Html.HiddenFor(model => model.ImageContentList[i].Sequence)
                    @Html.EditorFor(model => model.ImageContentList[i].ImageUrl)
                    @Html.EditorFor(model => model.ImageContentList[i].ImageAlt)
                    @Html.EditorFor(model => model.ImageContentList[i].ImageCaption)
                    @Html.EditorFor(model => model.ImageContentList[i].LoadingGradient)
                </div>
            </div>
        }
        for (int i = 0; i < Model.CodeContentList.Count; ++i)
        {
            <div id="ContentList_@(Model.CodeContentList[i].ID)__Dragger" class="dragger-row row callout" draggable="true">
                <div class="dragger-handle column small-1 callout secondary text-center">
                    <i class="fa fa-arrows-v" aria-hidden="true"></i>
                </div>
                <div class="dragger-content column small-11">
                    @Html.HiddenFor(model => model.CodeContentList[i].Sequence)
                    @Html.EditorFor(model => model.CodeContentList[i].CodeLanguage)
                    @Html.EditorFor(model => model.CodeContentList[i].Content)
                </div>
            </div>
        }
        for (int i = 0; i < Model.VideoContentList.Count; ++i)
        {
            <div id="ContentList_@(Model.VideoContentList[i].ID)__Dragger" class="dragger-row row callout" draggable="true">

                <div class="dragger-handle column small-1 callout secondary text-center">
                    <i class="fa fa-arrows-v" aria-hidden="true"></i>
                </div>
                <div class="dragger-content column small-11">
                    @Html.HiddenFor(model => model.VideoContentList[i].Sequence)
                    @Html.EditorFor(model => model.VideoContentList[i].VideoUrl)
                    @Html.EditorFor(model => model.VideoContentList[i].VideoIsWidescreen)
                </div>
            </div>
        }
    }
    <div class="row column">
        <input type="submit" value="Save" class="button success" />
    </div>
}
